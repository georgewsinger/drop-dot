;; Analyzed by ClojureScript 1.7.228
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros, asynchronize cljs-asynchronize.macros}, :excludes #{}, :name drop-dot.core, :imports nil, :requires {node cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.core.async cljs.core.async, s clojure.string, clojure.string clojure.string}, :uses {<! cljs.core.async, buffer cljs.core.async, close! cljs.core.async, offer! cljs.core.async, chan cljs.core.async, >! cljs.core.async, alts! cljs.core.async, poll! cljs.core.async, put! cljs.core.async, take! cljs.core.async}, :defs {drop-line {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 81, :column 7, :end-line 81, :end-column 16, :arglists (quote ([line]))}, :name drop-dot.core/drop-line, :variadic false, :file "src/drop_dot/core.cljs", :end-column 16, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, line->chan-linkable-path {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 87, :column 7, :end-line 87, :end-column 31, :arglists (quote ([line]))}, :name drop-dot.core/line->chan-linkable-path, :variadic false, :file "src/drop_dot/core.cljs", :end-column 31, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, chan-config-paths {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 147, :column 7, :end-line 147, :end-column 24, :arglists (quote ([]))}, :name drop-dot.core/chan-config-paths, :variadic false, :file "src/drop_dot/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, check-for-sys-requirements {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 164, :column 7, :end-line 164, :end-column 33, :arglists (quote ([]))}, :name drop-dot.core/check-for-sys-requirements, :variadic false, :file "src/drop_dot/core.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, link-line {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 132, :column 7, :end-line 132, :end-column 16, :arglists (quote ([line]))}, :name drop-dot.core/link-line, :variadic false, :file "src/drop_dot/core.cljs", :end-column 16, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, chan-path-exists? {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 50, :column 7, :end-line 50, :end-column 24, :arglists (quote ([line]))}, :name drop-dot.core/chan-path-exists?, :variadic false, :file "src/drop_dot/core.cljs", :end-column 24, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, chan-linkable-path->chan-linkable-path-that-wants-linking {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 97, :column 7, :end-line 97, :end-column 64, :arglists (quote ([chan-linkable-path]))}, :name drop-dot.core/chan-linkable-path->chan-linkable-path-that-wants-linking, :variadic false, :file "src/drop_dot/core.cljs", :end-column 64, :method-params ([chan-linkable-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan-linkable-path]))}, -main {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 174, :column 7, :end-line 174, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name drop-dot.core/-main, :variadic true, :file "src/drop_dot/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, drop-chan-verified-droppee {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 74, :column 7, :end-line 74, :end-column 33, :arglists (quote ([c]))}, :name drop-dot.core/drop-chan-verified-droppee, :variadic false, :file "src/drop_dot/core.cljs", :end-column 33, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, dropbox-installed? {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 43, :column 7, :end-line 43, :end-column 25, :arglists (quote ([]))}, :name drop-dot.core/dropbox-installed?, :variadic false, :file "src/drop_dot/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chan-vec-cmd->exec {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 26, :column 7, :end-line 26, :end-column 25, :arglists (quote ([input-chan]))}, :name drop-dot.core/chan-vec-cmd->exec, :variadic false, :file "src/drop_dot/core.cljs", :end-column 25, :method-params ([input-chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input-chan]))}, chan-config-paths->exec-drop-dot {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 139, :column 7, :end-line 139, :end-column 39, :arglists (quote ([chan-config cmd]))}, :name drop-dot.core/chan-config-paths->exec-drop-dot, :variadic false, :file "src/drop_dot/core.cljs", :end-column 39, :method-params ([chan-config cmd]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 2, :fn-var true, :arglists (quote ([chan-config cmd]))}, link-chan-path-that-needs-linking {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 122, :column 7, :end-line 122, :end-column 40, :arglists (quote ([c]))}, :name drop-dot.core/link-chan-path-that-needs-linking, :variadic false, :file "src/drop_dot/core.cljs", :end-column 40, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, pure-js {:name drop-dot.core/pure-js, :file "src/drop_dot/core.cljs", :line 9, :column 1, :end-line 9, :end-column 13, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 9, :column 6, :end-line 9, :end-column 13}}, dropdot-folder-exists? {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 40, :column 7, :end-line 40, :end-column 29, :arglists (quote ([]))}, :name drop-dot.core/dropdot-folder-exists?, :variadic false, :file "src/drop_dot/core.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chan-verified-path->chan-verified-droppee {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 63, :column 7, :end-line 63, :end-column 48, :arglists (quote ([chan-verified-path]))}, :name drop-dot.core/chan-verified-path->chan-verified-droppee, :variadic false, :file "src/drop_dot/core.cljs", :end-column 48, :method-params ([chan-verified-path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan-verified-path]))}, line->chan-verified-path {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 55, :column 7, :end-line 55, :end-column 31, :arglists (quote ([line]))}, :name drop-dot.core/line->chan-verified-path, :variadic false, :file "src/drop_dot/core.cljs", :end-column 31, :method-params ([line]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line]))}, exec-vec-of-commands {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 36, :column 7, :end-line 36, :end-column 27, :arglists (quote ([v]))}, :name drop-dot.core/exec-vec-of-commands, :variadic false, :file "src/drop_dot/core.cljs", :end-column 27, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, chan-linkable-path-that-wants-linking->chan-linkable-path-without-conflict-that-needs-linking {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 108, :column 7, :end-line 108, :end-column 100, :arglists (quote ([chan-linkable-path-that-wants-linking]))}, :name drop-dot.core/chan-linkable-path-that-wants-linking->chan-linkable-path-without-conflict-that-needs-linking, :variadic false, :file "src/drop_dot/core.cljs", :end-column 100, :method-params ([chan-linkable-path-that-wants-linking]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chan-linkable-path-that-wants-linking]))}, unix-OS? {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 46, :column 7, :end-line 46, :end-column 15, :arglists (quote ([]))}, :name drop-dot.core/unix-OS?, :variadic false, :file "src/drop_dot/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, protocol-msg? {:protocol-inline nil, :meta {:file "/home/george/Dropbox/drop-dot/src/drop_dot/core.cljs", :line 61, :column 7, :end-line 61, :end-column 20, :arglists (quote ([arg]))}, :name drop-dot.core/protocol-msg?, :variadic false, :file "src/drop_dot/core.cljs", :end-column 20, :method-params ([arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arg]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dm cljs-asynchronize.macros, cljs-asynchronize.macros cljs-asynchronize.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}